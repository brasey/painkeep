#!/bin/bash

### BEGIN INIT INFO
# Provides: painkeep
# Required-Start: 
# Required-Stop: 
# Default-Start: 3 5
# Default-Stop: 0 1 6
# Short-Description: Painkeep server
# Description: Start/stop a Painkeep server
### END INIT INFO

# Author: Bob Rasey <brasey@gmail.com>
# although in fairness, I started from this:
# http://ubuntuforums.org/showthread.php?t=2135647

DESC="Painkeep Server"
DAEMON='/srv/painkeep/mvdsv'
DAEMON_ARGS='-mem 128 +gamedir Painkeep -port 27500 +exec server.cfg -nopriority -noerrormsgbox +logrcon +logplayers +logerrors'
NAME="$(basename $0)"
SCRIPTNAME=$0
PIDFILE=/var/run/$NAME.pid

. /lib/lsb/init-functions

do_start() {
  # Return
  # 0 if daemon has been started
  # 1 if daemon was already running
  # 2 if daemon could not be started

  start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
  || return 1

  start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \
  $DAEMON_ARGS \
  || return 2
}

do_stop() {
  # Return
  # 0 if daemon has been stopped
  # 1 if daemon was already stopped
  # 2 if daemon could not be stopped
  # other if a failure occurred

  start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
  RETVAL="$?"

  [ "$RETVAL" = 2 ] && return 2

  start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec $DAEMON

  [ "$?" = 2 ] && return 2

  # Many daemons don't delete their pidfiles when they exit.

  rm -f $PIDFILE
  return "$RETVAL"
}

case "$1" in
  start)
    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
    do_start
    case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  stop)
    [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
    esac
    ;;
  status)
    status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|status}" >&2
    exit 3
    ;;
esac

